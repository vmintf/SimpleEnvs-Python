# .github/workflows/deploy.yml
name: Deploy to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment || 'PyPI' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'pypi' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Install dependencies and test
      run: |
        pip install aiofiles
        pip install -e .
        python -c "import simpleenvs; print(f'âœ… Package test successful: v{simpleenvs.__version__}')"

    - name: Build package
      run: |
        python -m build
        echo "âœ… Package built successfully!"

    - name: Check package
      run: |
        twine check dist/*
        echo "âœ… Package check passed!"

    - name: Publish to Test PyPI
      if: github.event.inputs.environment == 'testpypi' || github.event_name == 'workflow_dispatch'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*
        echo "ðŸ§ª Successfully deployed to Test PyPI!"

    - name: Publish to PyPI
      if: github.event.inputs.environment == 'pypi' || github.event_name == 'release'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
        echo "ðŸš€ Successfully deployed to PyPI!"