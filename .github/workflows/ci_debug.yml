# .github/workflows/ci_debug.yml
name: CI Debug

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aiofiles

    - name: Setup Python path
      run: |
        echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV

    - name: Test import with correct module name
      run: |
        python -c "
        import sys
        sys.path.insert(0, './src')
        
        try:
            # Try the actual folder name
            import simpleenvs
            print('‚úÖ simpleenvs import successful!')
            
            # Check version
            if hasattr(simpleenvs, '__version__'):
                print(f'Version: {simpleenvs.__version__}')
            else:
                # Try to get version from constants
                if hasattr(simpleenvs, 'constants'):
                    print(f'Version: {simpleenvs.constants.VERSION}')
                elif hasattr(simpleenvs, 'VERSION'):
                    print(f'Version: {simpleenvs.VERSION}')
                else:
                    print('Version info not found, but import works!')
            
            # Test basic functionality
            print('Testing basic functions...')
            available_funcs = [x for x in dir(simpleenvs) if not x.startswith('_')]
            print(f'Available: {available_funcs[:10]}')
            
        except ImportError as e:
            print(f'‚ùå Import failed: {e}')
            
            # Debug info
            import os
            print('Current directory contents:')
            print(os.listdir('./src'))
            if os.path.exists('./src/simpleenvs'):
                print('simpleenvs folder contents:')
                print(os.listdir('./src/simpleenvs'))
            sys.exit(1)
        "

    - name: Test basic functionality
      run: |
        python -c "
        import sys
        sys.path.insert(0, './src')
        import simpleenvs
        import tempfile
        import os
        
        # Test if load_dotenv exists
        if hasattr(simpleenvs, 'load_dotenv'):
            print('‚úÖ load_dotenv function found!')
            
            # Create test .env file
            with tempfile.NamedTemporaryFile(mode='w', suffix='.env', delete=False) as f:
                f.write('TEST_VAR=hello\\nDEBUG=true\\nPORT=8080\\n')
                env_file = f.name
            
            try:
                # Test loading
                simpleenvs.load_dotenv(env_file)
                
                # Check if it worked
                if os.getenv('TEST_VAR') == 'hello':
                    print('‚úÖ Environment loading works!')
                else:
                    print('‚ö†Ô∏è Environment variables not loaded properly')
                    
            except Exception as e:
                print(f'‚ö†Ô∏è Function test failed: {e}')
            finally:
                os.unlink(env_file)
        else:
            print('‚ö†Ô∏è load_dotenv not found, but module imports')
            print('Available functions:', [x for x in dir(simpleenvs) if not x.startswith('_')])
        
        print('üéâ Tests completed!')
        "