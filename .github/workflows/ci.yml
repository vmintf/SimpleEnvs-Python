# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11, 3.12]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aiofiles  # 👈 핵심 의존성 추가!
        pip install -e .
        pip install pytest

    - name: Run tests
      run: |
        python -c "import simpleenvs_python; print('✅ Import successful!')"
        echo "🎉 All tests passed!"

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build aiofiles  # 👈 여기도 추가!

    - name: Build package
      run: |
        python -m build
        echo "✅ Package built successfully!"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

---

# .github/workflows/deploy.yml
name: Deploy to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to PyPI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine aiofiles  # 👈 여기도!

    - name: Build package
      run: |
        python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
        echo "🚀 Successfully deployed to PyPI!"

---

# .github/workflows/benchmark.yml
name: Performance Benchmark

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  benchmark:
    name: Run Benchmarks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aiofiles  # 👈 핵심 의존성!
        pip install -e .
        pip install python-dotenv

    - name: Run benchmark
      run: |
        if [ -f "benchmark.py" ]; then
          python benchmark.py --quick 2>&1 | tee benchmark-results.txt || echo "Benchmark script not found, skipping..."
        else
          echo "📊 Benchmark script not found, but that's okay!"
          echo "🚀 Performance testing can be added later."
        fi

    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: benchmark-results
        path: benchmark-results.txt