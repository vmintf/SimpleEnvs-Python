# .github/workflows/debug.yml
name: Debug CI Issues

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  debug:
    name: Debug Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Î™®Îì† Î≤ÑÏ†Ñ ÌÖåÏä§Ìä∏ÌïòÍ∏∞
      matrix:
        python-version: ["3.9", "3.11"]  # ÏùºÎã® 2Í∞úÎßå

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check Python version
      run: |
        python --version
        which python
        pip --version

    - name: List project files
      run: |
        echo "üìÅ Project structure:"
        find . -name "*.py" | head -20
        echo ""
        echo "üìÅ Root files:"
        ls -la
        echo ""
        echo "üìÅ src/ folder (if exists):"
        ls -la src/ 2>/dev/null || echo "src/ folder not found"

    - name: Check for setup files
      run: |
        echo "üîç Setup files:"
        ls -la setup.py pyproject.toml setup.cfg 2>/dev/null || echo "No setup files found"
        
        if [ -f "pyproject.toml" ]; then
          echo "üìÑ pyproject.toml content:"
          cat pyproject.toml
        fi
        
        if [ -f "setup.py" ]; then
          echo "üìÑ setup.py content:"
          cat setup.py
        fi

    - name: Check Python path and imports
      run: |
        echo "üêç Python path:"
        python -c "import sys; print('\n'.join(sys.path))"
        
        echo ""
        echo "üîç Try basic imports:"
        
        # Test if we can find the module directory
        python -c "
        import os
        import sys
        
        # Add current directory to path
        sys.path.insert(0, '.')
        
        print('Current directory files:')
        for root, dirs, files in os.walk('.'):
            for file in files:
                if file.endswith('.py'):
                    print(f'  {os.path.join(root, file)}')
            if len(list(os.walk('.'))) > 20:  # Limit output
                break
        "

    - name: Try manual import
      run: |
        echo "üß™ Manual import test:"
        python -c "
        import sys
        import os
        
        # Add all possible paths
        sys.path.insert(0, '.')
        sys.path.insert(0, './src')
        
        print('Trying to import simpleenvs...')
        
        try:
            import simpleenvs
            print(f'‚úÖ Import successful!')
            print(f'Module location: {simpleenvs.__file__}')
            
            # Check if __version__ exists
            if hasattr(simpleenvs, '__version__'):
                print(f'Version: {simpleenvs.__version__}')
            else:
                print('‚ùå No __version__ attribute')
                print(f'Available attributes: {dir(simpleenvs)}')
                
        except ImportError as e:
            print(f'‚ùå Import failed: {e}')
            
            # Try importing submodules
            try:
                print('Trying src.simpleenvs...')
                sys.path.insert(0, './src')
                import simpleenvs
                print('‚úÖ src.simpleenvs works!')
            except ImportError as e2:
                print(f'‚ùå src.simpleenvs also failed: {e2}')
        "

    - name: Install dependencies only
      run: |
        echo "üì¶ Installing dependencies..."
        python -m pip install --upgrade pip
        pip install aiofiles

    - name: Try package installation
      run: |
        echo "üì¶ Attempting package installation..."
        
        # Try different installation methods
        if pip install -e . 2>&1; then
          echo "‚úÖ pip install -e . succeeded"
        else
          echo "‚ùå pip install -e . failed"
          echo "Trying alternative methods..."
          
          # Try installing from src directory
          if pip install -e ./src 2>&1; then
            echo "‚úÖ pip install -e ./src succeeded"
          else
            echo "‚ùå pip install -e ./src also failed"
            
            # Manual installation
            echo "Trying manual PYTHONPATH setup..."
            export PYTHONPATH="${PYTHONPATH}:$(pwd):$(pwd)/src"
            python -c "import simpleenvs; print('‚úÖ Manual PYTHONPATH works!')" || echo "‚ùå Manual method failed too"
          fi
        fi

    - name: Final test
      run: |
        echo "üéØ Final test:"
        python -c "
        try:
            import simpleenvs
            print(f'‚úÖ Final import successful!')
            print(f'Module: {simpleenvs}')
            print(f'File: {simpleenvs.__file__}')
            
            # Test basic functionality
            print('Testing basic functions...')
            print(f'Available functions: {[x for x in dir(simpleenvs) if not x.startswith(\"_\")]}')
            
        except Exception as e:
            print(f'‚ùå Final test failed: {e}')
            
            # Show what we can import
            import sys
            print(f'Python path: {sys.path}')
            
            import os
            print('Available .py files:')
            for root, dirs, files in os.walk('.'):
                for file in files:
                    if file.endswith('.py'):
                        print(f'  {os.path.join(root, file)}')
        "