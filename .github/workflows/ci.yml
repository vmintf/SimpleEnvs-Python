# .github/workflows/ci.yml
name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install aiofiles  # Required dependency
        pip install pytest pytest-asyncio  # Testing dependencies

    - name: Install package
      run: |
        pip install -e .

    - name: Test import
      run: |
        python -c "import simpleenvs; print(f'âœ… SimpleEnvs v{simpleenvs.__version__} imported successfully!')"

    - name: Test basic functionality
      run: |
        python -c "
        import simpleenvs
        import tempfile
        import os
        
        # Create test .env file
        with tempfile.NamedTemporaryFile(mode='w', suffix='.env', delete=False) as f:
            f.write('TEST_VAR=hello\\nDEBUG=true\\nPORT=8080\\n')
            env_file = f.name
        
        try:
            # Test simple loading
            simpleenvs.load_dotenv(env_file)
            assert os.getenv('TEST_VAR') == 'hello'
            print('âœ… Simple loading works!')
            
            # Test type-safe getters
            debug = simpleenvs.get_bool('DEBUG')
            port = simpleenvs.get_int('PORT')
            assert debug == True
            assert port == 8080
            print('âœ… Type-safe getters work!')
            
            print('ðŸŽ‰ All basic tests passed!')
        finally:
            os.unlink(env_file)
        "

    - name: Test async functionality
      run: |
        python -c "
        import asyncio
        import simpleenvs
        import tempfile
        import os
        
        async def test_async():
            # Create test .env file
            with tempfile.NamedTemporaryFile(mode='w', suffix='.env', delete=False) as f:
                f.write('ASYNC_VAR=test_value\\n')
                env_file = f.name
            
            try:
                # Test async loading
                await simpleenvs.load(env_file)
                value = simpleenvs.get('ASYNC_VAR')
                assert value == 'test_value'
                print('âœ… Async loading works!')
            finally:
                os.unlink(env_file)
        
        asyncio.run(test_async())
        "

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: |
        python -m build
        echo "âœ… Package built successfully!"

    - name: Verify build
      run: |
        ls -la dist/
        echo "ðŸ“¦ Build artifacts:"
        find dist/ -name "*.whl" -o -name "*.tar.gz"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-${{ github.sha }}
        path: dist/
